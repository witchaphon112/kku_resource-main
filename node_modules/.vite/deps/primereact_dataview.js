"use client";
import {
  BarsIcon,
  Paginator
} from "./chunk-7XNQGS36.js";
import "./chunk-PODA6HZ4.js";
import "./chunk-EDPRJKII.js";
import "./chunk-UGRFCM2W.js";
import "./chunk-G524WMWU.js";
import "./chunk-DCTHPFAX.js";
import {
  SpinnerIcon
} from "./chunk-TSNZSZZ5.js";
import "./chunk-T45DI5LR.js";
import "./chunk-4K6JKMC2.js";
import "./chunk-MFIR7EDG.js";
import "./chunk-X7IMCAEJ.js";
import "./chunk-UYATFWPX.js";
import {
  IconBase
} from "./chunk-S3FWCJ4P.js";
import {
  Ripple
} from "./chunk-7TRFHTJQ.js";
import "./chunk-E4PV6GVO.js";
import "./chunk-ORYFNTKN.js";
import {
  ComponentBase,
  IconUtils,
  ObjectUtils,
  PrimeReact,
  PrimeReactContext,
  classNames,
  localeOption,
  useHandleStyle,
  useMergeProps
} from "./chunk-EELMOD66.js";
import {
  require_react
} from "./chunk-E434T6SK.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/primereact/dataview/dataview.esm.js
var React2 = __toESM(require_react());

// node_modules/primereact/icons/thlarge/index.esm.js
var React = __toESM(require_react());
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var ThLargeIcon = React.memo(React.forwardRef(function(inProps, ref) {
  var pti = IconBase.getPTI(inProps);
  return React.createElement("svg", _extends({
    ref,
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, pti), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M1.90909 6.36364H4.45455C4.96087 6.36364 5.44645 6.1625 5.80448 5.80448C6.1625 5.44645 6.36364 4.96087 6.36364 4.45455V1.90909C6.36364 1.40277 6.1625 0.917184 5.80448 0.55916C5.44645 0.201136 4.96087 0 4.45455 0H1.90909C1.40277 0 0.917184 0.201136 0.55916 0.55916C0.201136 0.917184 0 1.40277 0 1.90909V4.45455C0 4.96087 0.201136 5.44645 0.55916 5.80448C0.917184 6.1625 1.40277 6.36364 1.90909 6.36364ZM1.46154 1.46154C1.58041 1.34268 1.741 1.27492 1.90909 1.27273H4.45455C4.62264 1.27492 4.78322 1.34268 4.90209 1.46154C5.02096 1.58041 5.08871 1.741 5.09091 1.90909V4.45455C5.08871 4.62264 5.02096 4.78322 4.90209 4.90209C4.78322 5.02096 4.62264 5.08871 4.45455 5.09091H1.90909C1.741 5.08871 1.58041 5.02096 1.46154 4.90209C1.34268 4.78322 1.27492 4.62264 1.27273 4.45455V1.90909C1.27492 1.741 1.34268 1.58041 1.46154 1.46154ZM1.90909 14H4.45455C4.96087 14 5.44645 13.7989 5.80448 13.4408C6.1625 13.0828 6.36364 12.5972 6.36364 12.0909V9.54544C6.36364 9.03912 6.1625 8.55354 5.80448 8.19551C5.44645 7.83749 4.96087 7.63635 4.45455 7.63635H1.90909C1.40277 7.63635 0.917184 7.83749 0.55916 8.19551C0.201136 8.55354 0 9.03912 0 9.54544V12.0909C0 12.5972 0.201136 13.0828 0.55916 13.4408C0.917184 13.7989 1.40277 14 1.90909 14ZM1.46154 9.0979C1.58041 8.97903 1.741 8.91128 1.90909 8.90908H4.45455C4.62264 8.91128 4.78322 8.97903 4.90209 9.0979C5.02096 9.21677 5.08871 9.37735 5.09091 9.54544V12.0909C5.08871 12.259 5.02096 12.4196 4.90209 12.5384C4.78322 12.6573 4.62264 12.7251 4.45455 12.7273H1.90909C1.741 12.7251 1.58041 12.6573 1.46154 12.5384C1.34268 12.4196 1.27492 12.259 1.27273 12.0909V9.54544C1.27492 9.37735 1.34268 9.21677 1.46154 9.0979ZM12.0909 6.36364H9.54544C9.03912 6.36364 8.55354 6.1625 8.19551 5.80448C7.83749 5.44645 7.63635 4.96087 7.63635 4.45455V1.90909C7.63635 1.40277 7.83749 0.917184 8.19551 0.55916C8.55354 0.201136 9.03912 0 9.54544 0H12.0909C12.5972 0 13.0828 0.201136 13.4408 0.55916C13.7989 0.917184 14 1.40277 14 1.90909V4.45455C14 4.96087 13.7989 5.44645 13.4408 5.80448C13.0828 6.1625 12.5972 6.36364 12.0909 6.36364ZM9.54544 1.27273C9.37735 1.27492 9.21677 1.34268 9.0979 1.46154C8.97903 1.58041 8.91128 1.741 8.90908 1.90909V4.45455C8.91128 4.62264 8.97903 4.78322 9.0979 4.90209C9.21677 5.02096 9.37735 5.08871 9.54544 5.09091H12.0909C12.259 5.08871 12.4196 5.02096 12.5384 4.90209C12.6573 4.78322 12.7251 4.62264 12.7273 4.45455V1.90909C12.7251 1.741 12.6573 1.58041 12.5384 1.46154C12.4196 1.34268 12.259 1.27492 12.0909 1.27273H9.54544ZM9.54544 14H12.0909C12.5972 14 13.0828 13.7989 13.4408 13.4408C13.7989 13.0828 14 12.5972 14 12.0909V9.54544C14 9.03912 13.7989 8.55354 13.4408 8.19551C13.0828 7.83749 12.5972 7.63635 12.0909 7.63635H9.54544C9.03912 7.63635 8.55354 7.83749 8.19551 8.19551C7.83749 8.55354 7.63635 9.03912 7.63635 9.54544V12.0909C7.63635 12.5972 7.83749 13.0828 8.19551 13.4408C8.55354 13.7989 9.03912 14 9.54544 14ZM9.0979 9.0979C9.21677 8.97903 9.37735 8.91128 9.54544 8.90908H12.0909C12.259 8.91128 12.4196 8.97903 12.5384 9.0979C12.6573 9.21677 12.7251 9.37735 12.7273 9.54544V12.0909C12.7251 12.259 12.6573 12.4196 12.5384 12.5384C12.4196 12.6573 12.259 12.7251 12.0909 12.7273H9.54544C9.37735 12.7251 9.21677 12.6573 9.0979 12.5384C8.97903 12.4196 8.91128 12.259 8.90908 12.0909V9.54544C8.91128 9.37735 8.97903 9.21677 9.0979 9.0979Z",
    fill: "currentColor"
  }));
}));
ThLargeIcon.displayName = "ThLargeIcon";

// node_modules/primereact/dataview/dataview.esm.js
function _extends2() {
  return _extends2 = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends2.apply(null, arguments);
}
function _arrayLikeToArray$1(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$1(r);
}
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _unsupportedIterableToArray$1(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$1(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$1(r, a) : void 0;
  }
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray$1(r) || _nonIterableSpread();
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray$1(r, e) || _nonIterableRest();
}
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _defineProperty(e, r, t) {
  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r] = t, e;
}
var classes = {
  loadingIcon: "p-dataview-loading-icon",
  loadingOverlay: "p-dataview-loading-overlay p-component-overlay",
  emptyMessage: "p-dataview-emptymessage",
  header: "p-dataview-header",
  footer: "p-dataview-footer",
  content: "p-dataview-content",
  grid: function grid(_ref) {
    var props = _ref.props;
    return classNames("p-grid grid", {
      "p-nogutter grid-nogutter": !props.gutter
    });
  },
  root: function root(_ref2) {
    var props = _ref2.props;
    return classNames("p-dataview p-component", _defineProperty(_defineProperty({}, "p-dataview-".concat(props.layout), !!props.layout), "p-dataview-loading", props.loading));
  }
};
var styles = "\n@layer primereact {\n    .p-dataview-loading {\n        position: relative;\n        min-height: 4rem;\n    }\n\n    .p-dataview .p-dataview-loading-overlay {\n        position: absolute;\n        z-index: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n}\n";
var DataViewBase = ComponentBase.extend({
  defaultProps: {
    __TYPE: "DataView",
    id: null,
    header: null,
    footer: null,
    value: null,
    layout: "list",
    dataKey: null,
    rows: null,
    first: 0,
    totalRecords: null,
    paginator: false,
    paginatorPosition: "bottom",
    alwaysShowPaginator: true,
    paginatorClassName: null,
    paginatorTemplate: "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown",
    paginatorLeft: null,
    paginatorRight: null,
    paginatorDropdownAppendTo: null,
    pageLinkSize: 5,
    rowsPerPageOptions: null,
    currentPageReportTemplate: "({currentPage} of {totalPages})",
    emptyMessage: null,
    sortField: null,
    sortOrder: null,
    style: null,
    className: null,
    lazy: false,
    loading: false,
    loadingIcon: null,
    gutter: false,
    itemTemplate: null,
    listTemplate: null,
    onPage: null,
    children: void 0
  },
  css: {
    classes,
    styles
  }
});
var DataViewLayoutOptionsBase = ComponentBase.extend({
  defaultProps: {
    __TYPE: "DataViewLayoutOptions",
    id: null,
    style: null,
    className: null,
    layout: null,
    listIcon: null,
    gridIcon: null,
    onChange: null,
    children: void 0
  },
  css: {
    classes: {
      root: "p-dataview p-component p-dataview-layout-options p-selectbutton p-button-group",
      listButton: function listButton(_ref3) {
        var props = _ref3.props;
        return classNames("p-button p-button-icon-only", {
          "p-highlight": props.layout === "list"
        });
      },
      gridButton: function gridButton(_ref4) {
        var props = _ref4.props;
        return classNames("p-button p-button-icon-only", {
          "p-highlight": props.layout === "grid"
        });
      }
    }
  }
});
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t["return"] || t["return"]();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var DataViewLayoutOptions = React2.memo(function(inProps) {
  var mergeProps = useMergeProps();
  var context = React2.useContext(PrimeReactContext);
  var props = DataViewLayoutOptionsBase.getProps(inProps, context);
  var _DataViewLayoutOption = DataViewLayoutOptionsBase.setMetaData({
    props
  }), ptm = _DataViewLayoutOption.ptm, cx = _DataViewLayoutOption.cx;
  var changeLayout = function changeLayout2(event, layoutMode) {
    props.onChange({
      originalEvent: event,
      value: layoutMode
    });
    event.preventDefault();
  };
  var listIconProps = mergeProps(ptm("list"));
  var gridIconProps = mergeProps(ptm("grid"));
  var listIcon = IconUtils.getJSXIcon(props.listIcon || React2.createElement(BarsIcon, listIconProps), _objectSpread({}, listIconProps), {
    props
  });
  var gridIcon = IconUtils.getJSXIcon(props.gridIcon || React2.createElement(ThLargeIcon, gridIconProps), _objectSpread({}, gridIconProps), {
    props
  });
  var rootProps = mergeProps({
    id: props.id,
    style: props.style,
    className: classNames(props.className, cx("root"))
  }, DataViewLayoutOptionsBase.getOtherProps(props), ptm("root"));
  var listButtonProps = mergeProps({
    type: "button",
    className: cx("listButton"),
    onClick: function onClick(event) {
      return changeLayout(event, "list");
    }
  }, ptm("listButton"));
  var gridButtonProps = mergeProps({
    type: "button",
    className: cx("gridButton"),
    onClick: function onClick(event) {
      return changeLayout(event, "grid");
    }
  }, ptm("gridButton"));
  return React2.createElement("div", rootProps, React2.createElement("button", listButtonProps, listIcon, React2.createElement(Ripple, null)), React2.createElement("button", gridButtonProps, gridIcon, React2.createElement(Ripple, null)));
});
var DataViewItem = React2.memo(function(props) {
  return props.template(props.item, props.layout);
});
var DataView = React2.memo(React2.forwardRef(function(inProps, ref) {
  var mergeProps = useMergeProps();
  var context = React2.useContext(PrimeReactContext);
  var props = DataViewBase.getProps(inProps, context);
  var _React$useState = React2.useState(props.first), _React$useState2 = _slicedToArray(_React$useState, 2), firstState = _React$useState2[0], setFirstState = _React$useState2[1];
  var _React$useState3 = React2.useState(props.rows), _React$useState4 = _slicedToArray(_React$useState3, 2), rowsState = _React$useState4[0], setRowsState = _React$useState4[1];
  var metaData = {
    props,
    state: {
      first: firstState,
      rows: rowsState
    }
  };
  var _DataViewBase$setMeta = DataViewBase.setMetaData(metaData), ptm = _DataViewBase$setMeta.ptm, cx = _DataViewBase$setMeta.cx, isUnstyled = _DataViewBase$setMeta.isUnstyled;
  useHandleStyle(DataViewBase.css.styles, isUnstyled, {
    name: "dataview"
  });
  var elementRef = React2.useRef(null);
  var first = props.onPage ? props.first : firstState;
  var rows = props.onPage ? props.rows : rowsState;
  var getItemRenderKey = function getItemRenderKey2(value) {
    return props.dataKey ? ObjectUtils.resolveFieldData(value, props.dataKey) : null;
  };
  var getTotalRecords = function getTotalRecords2() {
    return props.totalRecords ? props.totalRecords : props.value ? props.value.length : 0;
  };
  var createPaginator = function createPaginator2(position) {
    var className = classNames("p-paginator-" + position, props.paginatorClassName);
    var totalRecords = getTotalRecords();
    return React2.createElement(Paginator, {
      first,
      rows,
      pageLinkSize: props.pageLinkSize,
      className,
      onPageChange,
      template: props.paginatorTemplate,
      totalRecords,
      rowsPerPageOptions: props.rowsPerPageOptions,
      currentPageReportTemplate: props.currentPageReportTemplate,
      leftContent: props.paginatorLeft,
      rightContent: props.paginatorRight,
      alwaysShow: props.alwaysShowPaginator,
      dropdownAppendTo: props.paginatorDropdownAppendTo,
      pt: ptm("paginator"),
      unstyled: props.unstyled,
      __parentMetadata: {
        parent: metaData
      }
    });
  };
  var onPageChange = function onPageChange2(event) {
    if (props.onPage) {
      props.onPage(event);
    } else {
      setFirstState(event.first);
      setRowsState(event.rows);
    }
  };
  var getItems = function getItems2(value) {
    if (props.paginator) {
      var currentFirst = props.lazy ? 0 : first;
      var totalRecords = getTotalRecords();
      var last = Math.min(rows + currentFirst, totalRecords);
      return value.slice(currentFirst, last) || [];
    }
    return value;
  };
  var sort = function sort2() {
    if (props.value) {
      var lookupMap = /* @__PURE__ */ new Map();
      var comparator = ObjectUtils.localeComparator(context && context.locale || PrimeReact.locale);
      var value = _toConsumableArray(props.value);
      var _iterator = _createForOfIteratorHelper(value), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var item = _step.value;
          lookupMap.set(item, ObjectUtils.resolveFieldData(item, props.sortField));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      value.sort(function(data1, data2) {
        var value1 = lookupMap.get(data1);
        var value2 = lookupMap.get(data2);
        return ObjectUtils.sort(value1, value2, props.sortOrder, comparator, context && context.nullSortOrder || PrimeReact.nullSortOrder);
      });
      return value;
    }
    return null;
  };
  var createLoader = function createLoader2() {
    if (props.loading) {
      var loadingIconProps = mergeProps({
        className: cx("loadingIcon")
      }, ptm("loadingIcon"));
      var icon = props.loadingIcon || React2.createElement(SpinnerIcon, _extends2({}, loadingIconProps, {
        spin: true
      }));
      var loadingIcon = IconUtils.getJSXIcon(icon, _objectSpread({}, loadingIconProps), {
        props
      });
      var loadingOverlayProps = mergeProps({
        className: cx("loadingOverlay")
      }, ptm("loadingOverlay"));
      return React2.createElement("div", loadingOverlayProps, loadingIcon);
    }
    return null;
  };
  var createTopPaginator = function createTopPaginator2() {
    if (props.paginator && (props.paginatorPosition !== "bottom" || props.paginatorPosition === "both")) {
      return createPaginator("top");
    }
    return null;
  };
  var createBottomPaginator = function createBottomPaginator2() {
    if (props.paginator && (props.paginatorPosition !== "top" || props.paginatorPosition === "both")) {
      return createPaginator("bottom");
    }
    return null;
  };
  var createEmptyMessage = function createEmptyMessage2() {
    if (!props.loading) {
      var _content = props.emptyMessage || localeOption("emptyMessage");
      var emptyMessageProps = mergeProps({
        className: cx("emptyMessage")
      }, ptm("emptyMessage"));
      return React2.createElement("div", emptyMessageProps, _content);
    }
    return null;
  };
  var createHeader = function createHeader2() {
    if (props.header) {
      var headerProps = mergeProps({
        className: cx("header")
      }, ptm("header"));
      return React2.createElement("div", headerProps, props.header);
    }
    return null;
  };
  var createFooter = function createFooter2() {
    if (props.footer) {
      var footerProps = mergeProps({
        className: cx("footer")
      }, ptm("footer"));
      return React2.createElement("div", footerProps, props.footer);
    }
    return null;
  };
  var createItems = function createItems2(value) {
    if (ObjectUtils.isNotEmpty(value)) {
      var items = getItems(value);
      return items.map(function(item, index) {
        return React2.createElement(DataViewItem, {
          key: getItemRenderKey(item) || index,
          template: props.itemTemplate,
          layout: props.layout,
          item
        });
      });
    }
    return createEmptyMessage();
  };
  var createContent = function createContent2(value) {
    var contentProps = mergeProps({
      className: cx("content")
    }, ptm("content"));
    var content2 = null;
    if (props.listTemplate) {
      var items = getItems(value);
      if (ObjectUtils.isNotEmpty(items)) {
        content2 = ObjectUtils.getJSXElement(props.listTemplate, items, props.layout);
      } else {
        content2 = createEmptyMessage();
      }
    } else {
      var _items = createItems(value);
      var gridProps = mergeProps({
        className: cx("grid")
      }, ptm("grid"));
      content2 = React2.createElement("div", gridProps, _items);
    }
    return React2.createElement("div", contentProps, content2);
  };
  var processData = function processData2() {
    var data2 = props.value;
    if (ObjectUtils.isNotEmpty(data2) && props.sortField) {
      data2 = sort();
    }
    return data2;
  };
  React2.useImperativeHandle(ref, function() {
    return {
      props,
      getElement: function getElement() {
        return elementRef.current;
      }
    };
  });
  var data = processData();
  var loader = createLoader();
  var topPaginator = createTopPaginator();
  var bottomPaginator = createBottomPaginator();
  var header = createHeader();
  var footer = createFooter();
  var content = createContent(data);
  var rootProps = mergeProps({
    id: props.id,
    ref: elementRef,
    style: props.style,
    className: classNames(props.className, cx("root"))
  }, DataViewBase.getOtherProps(props), ptm("root"));
  return React2.createElement("div", rootProps, loader, header, topPaginator, content, bottomPaginator, footer);
}));
DataViewLayoutOptions.displayName = "DataViewLayoutOptions";
DataViewItem.displayName = "DataViewItem";
DataView.displayName = "DataView";
export {
  DataView,
  DataViewItem,
  DataViewLayoutOptions
};
//# sourceMappingURL=primereact_dataview.js.map
