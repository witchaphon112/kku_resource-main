{
  "version": 3,
  "sources": ["../../primereact/divider/divider.esm.js"],
  "sourcesContent": ["'use client';\r\nimport * as React from 'react';\r\nimport { PrimeReactContext } from 'primereact/api';\r\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\r\nimport { useMergeProps } from 'primereact/hooks';\r\nimport { classNames } from 'primereact/utils';\r\n\r\nvar classes = {\r\n  root: function root(_ref) {\r\n    var props = _ref.props,\r\n      horizontal = _ref.horizontal,\r\n      vertical = _ref.vertical;\r\n    return classNames(\"p-divider p-component p-divider-\".concat(props.layout, \" p-divider-\").concat(props.type), {\r\n      'p-divider-left': horizontal && (!props.align || props.align === 'left'),\r\n      'p-divider-right': horizontal && props.align === 'right',\r\n      'p-divider-center': horizontal && props.align === 'center' || vertical && (!props.align || props.align === 'center'),\r\n      'p-divider-top': vertical && props.align === 'top',\r\n      'p-divider-bottom': vertical && props.align === 'bottom'\r\n    }, props.className);\r\n  },\r\n  content: 'p-divider-content'\r\n};\r\nvar styles = \"\\n@layer primereact {\\n    .p-divider-horizontal {\\n        display: flex;\\n        width: 100%;\\n        position: relative;\\n        align-items: center;\\n    }\\n    \\n    .p-divider-horizontal:before {\\n        position: absolute;\\n        display: block;\\n        top: 50%;\\n        left: 0;\\n        width: 100%;\\n        content: \\\"\\\";\\n    }\\n    \\n    .p-divider-horizontal.p-divider-left {\\n        justify-content: flex-start;\\n    }\\n    \\n    .p-divider-horizontal.p-divider-right {\\n        justify-content: flex-end;\\n    }\\n    \\n    .p-divider-horizontal.p-divider-center {\\n        justify-content: center;\\n    }\\n    \\n    .p-divider-content {\\n        z-index: 1;\\n    }\\n    \\n    .p-divider-vertical {\\n        min-height: 100%;\\n        margin: 0 1rem;\\n        display: flex;\\n        position: relative;\\n        justify-content: center;\\n    }\\n    \\n    .p-divider-vertical:before {\\n        position: absolute;\\n        display: block;\\n        top: 0;\\n        left: 50%;\\n        height: 100%;\\n        content: \\\"\\\";\\n    }\\n    \\n    .p-divider-vertical.p-divider-top {\\n        align-items: flex-start;\\n    }\\n    \\n    .p-divider-vertical.p-divider-center {\\n        align-items: center;\\n    }\\n    \\n    .p-divider-vertical.p-divider-bottom {\\n        align-items: flex-end;\\n    }\\n    \\n    .p-divider-solid.p-divider-horizontal:before {\\n        border-top-style: solid;\\n    }\\n    \\n    .p-divider-solid.p-divider-vertical:before {\\n        border-left-style: solid;\\n    }\\n    \\n    .p-divider-dashed.p-divider-horizontal:before {\\n        border-top-style: dashed;\\n    }\\n    \\n    .p-divider-dashed.p-divider-vertical:before {\\n        border-left-style: dashed;\\n    }\\n    \\n    .p-divider-dotted.p-divider-horizontal:before {\\n        border-top-style: dotted;\\n    }\\n    \\n    .p-divider-dotted.p-divider-horizontal:before {\\n        border-left-style: dotted;\\n    }\\n}\\n\";\r\nvar inlineStyles = {\r\n  root: function root(_ref2) {\r\n    var props = _ref2.props;\r\n    return {\r\n      justifyContent: props.layout === 'horizontal' ? props.align === 'center' || props.align === null ? 'center' : props.align === 'left' ? 'flex-start' : props.align === 'right' ? 'flex-end' : null : null,\r\n      alignItems: props.layout === 'vertical' ? props.align === 'center' || props.align === null ? 'center' : props.align === 'top' ? 'flex-start' : props.align === 'bottom' ? 'flex-end' : null : null\r\n    };\r\n  }\r\n};\r\nvar DividerBase = ComponentBase.extend({\r\n  defaultProps: {\r\n    __TYPE: 'Divider',\r\n    align: null,\r\n    layout: 'horizontal',\r\n    type: 'solid',\r\n    style: null,\r\n    className: null,\r\n    children: undefined\r\n  },\r\n  css: {\r\n    classes: classes,\r\n    styles: styles,\r\n    inlineStyles: inlineStyles\r\n  }\r\n});\r\n\r\nvar Divider = /*#__PURE__*/React.forwardRef(function (inProps, ref) {\r\n  var mergeProps = useMergeProps();\r\n  var context = React.useContext(PrimeReactContext);\r\n  var props = DividerBase.getProps(inProps, context);\r\n  var _DividerBase$setMetaD = DividerBase.setMetaData({\r\n      props: props\r\n    }),\r\n    ptm = _DividerBase$setMetaD.ptm,\r\n    cx = _DividerBase$setMetaD.cx,\r\n    sx = _DividerBase$setMetaD.sx,\r\n    isUnstyled = _DividerBase$setMetaD.isUnstyled;\r\n  useHandleStyle(DividerBase.css.styles, isUnstyled, {\r\n    name: 'divider'\r\n  });\r\n  var elementRef = React.useRef(null);\r\n  var horizontal = props.layout === 'horizontal';\r\n  var vertical = props.layout === 'vertical';\r\n  React.useImperativeHandle(ref, function () {\r\n    return {\r\n      props: props,\r\n      getElement: function getElement() {\r\n        return elementRef.current;\r\n      }\r\n    };\r\n  });\r\n  var rootProps = mergeProps({\r\n    ref: elementRef,\r\n    style: sx('root'),\r\n    className: cx('root', {\r\n      horizontal: horizontal,\r\n      vertical: vertical\r\n    }),\r\n    'aria-orientation': props.layout,\r\n    role: 'separator'\r\n  }, DividerBase.getOtherProps(props), ptm('root'));\r\n  var contentProps = mergeProps({\r\n    className: cx('content')\r\n  }, ptm('content'));\r\n  return /*#__PURE__*/React.createElement(\"div\", rootProps, /*#__PURE__*/React.createElement(\"div\", contentProps, props.children));\r\n});\r\nDivider.displayName = 'Divider';\r\n\r\nexport { Divider };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;AACA,YAAuB;AAMvB,IAAI,UAAU;AAAA,EACZ,MAAM,SAAS,KAAK,MAAM;AACxB,QAAI,QAAQ,KAAK,OACf,aAAa,KAAK,YAClB,WAAW,KAAK;AAClB,WAAO,WAAW,mCAAmC,OAAO,MAAM,QAAQ,aAAa,EAAE,OAAO,MAAM,IAAI,GAAG;AAAA,MAC3G,kBAAkB,eAAe,CAAC,MAAM,SAAS,MAAM,UAAU;AAAA,MACjE,mBAAmB,cAAc,MAAM,UAAU;AAAA,MACjD,oBAAoB,cAAc,MAAM,UAAU,YAAY,aAAa,CAAC,MAAM,SAAS,MAAM,UAAU;AAAA,MAC3G,iBAAiB,YAAY,MAAM,UAAU;AAAA,MAC7C,oBAAoB,YAAY,MAAM,UAAU;AAAA,IAClD,GAAG,MAAM,SAAS;AAAA,EACpB;AAAA,EACA,SAAS;AACX;AACA,IAAI,SAAS;AACb,IAAI,eAAe;AAAA,EACjB,MAAM,SAASA,MAAK,OAAO;AACzB,QAAI,QAAQ,MAAM;AAClB,WAAO;AAAA,MACL,gBAAgB,MAAM,WAAW,eAAe,MAAM,UAAU,YAAY,MAAM,UAAU,OAAO,WAAW,MAAM,UAAU,SAAS,eAAe,MAAM,UAAU,UAAU,aAAa,OAAO;AAAA,MACpM,YAAY,MAAM,WAAW,aAAa,MAAM,UAAU,YAAY,MAAM,UAAU,OAAO,WAAW,MAAM,UAAU,QAAQ,eAAe,MAAM,UAAU,WAAW,aAAa,OAAO;AAAA,IAChM;AAAA,EACF;AACF;AACA,IAAI,cAAc,cAAc,OAAO;AAAA,EACrC,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,WAAW;AAAA,IACX,UAAU;AAAA,EACZ;AAAA,EACA,KAAK;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;AAED,IAAI,UAA6B,iBAAW,SAAU,SAAS,KAAK;AAClE,MAAI,aAAa,cAAc;AAC/B,MAAI,UAAgB,iBAAW,iBAAiB;AAChD,MAAI,QAAQ,YAAY,SAAS,SAAS,OAAO;AACjD,MAAI,wBAAwB,YAAY,YAAY;AAAA,IAChD;AAAA,EACF,CAAC,GACD,MAAM,sBAAsB,KAC5B,KAAK,sBAAsB,IAC3B,KAAK,sBAAsB,IAC3B,aAAa,sBAAsB;AACrC,iBAAe,YAAY,IAAI,QAAQ,YAAY;AAAA,IACjD,MAAM;AAAA,EACR,CAAC;AACD,MAAI,aAAmB,aAAO,IAAI;AAClC,MAAI,aAAa,MAAM,WAAW;AAClC,MAAI,WAAW,MAAM,WAAW;AAChC,EAAM,0BAAoB,KAAK,WAAY;AACzC,WAAO;AAAA,MACL;AAAA,MACA,YAAY,SAAS,aAAa;AAChC,eAAO,WAAW;AAAA,MACpB;AAAA,IACF;AAAA,EACF,CAAC;AACD,MAAI,YAAY,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,OAAO,GAAG,MAAM;AAAA,IAChB,WAAW,GAAG,QAAQ;AAAA,MACpB;AAAA,MACA;AAAA,IACF,CAAC;AAAA,IACD,oBAAoB,MAAM;AAAA,IAC1B,MAAM;AAAA,EACR,GAAG,YAAY,cAAc,KAAK,GAAG,IAAI,MAAM,CAAC;AAChD,MAAI,eAAe,WAAW;AAAA,IAC5B,WAAW,GAAG,SAAS;AAAA,EACzB,GAAG,IAAI,SAAS,CAAC;AACjB,SAA0B,oBAAc,OAAO,WAA8B,oBAAc,OAAO,cAAc,MAAM,QAAQ,CAAC;AACjI,CAAC;AACD,QAAQ,cAAc;",
  "names": ["root"]
}
